5+5
3^2
3**2
?log
log(100, base=10)
args(log)
x=5
y <- 5 // better r style
y <- 5
6 -> y
objects()
objects()[0]
objects()[[0]]
6:0
seq(2,8,2)
c(1,2,3,4)
x = c(1,2,3,4)
summary(x)
x/2
y = 2:10
x+y
y = 2:6
y.len
y
y = 2:5
x+y
z = c("asfd", "s", "sd", "df")
z
z + x
paste(z, " ")
paste(z, collapse=" ")
paste(z, collapse="**")
TRUE
FALSE
T
F
y = c(T,F,T)
x
x[0]
x[1]
length(x)
length(x)
x[1:3]
x[3:1]
x[3:-1]
x[-1]
x[-c(1,2,3)]
x[T]
x[c(T,F)]
x[x>3]
w = c(2,3,4,5,6)
w * 2
w = c(2,3,4,5,6)
w * 2
add1 = function(x) {
x + 1
}
add1(w)
(x - lower) / (upper - lower)
rescale = function(x) {
upper = max(x)
lower = min(x)
(x - lower) / (upper - lower)
}
rescale(w)
objects()
quit()
spiciness = c("Medium", "Mild", "Hot", "Hot", "Medium")
sp = factor(spiciness)
sp
as.numeric(sp)
levels(sp)
sp = factor(spiciness, levels = c("Mild", "Medium", "Hot"))
as.numeric(sp)
levels(sp)
sp = factor(spiciness, levels = c("Midld", "Medium", "Hot"))
as.numeric(sp)
levels(sp)
sp = factor(spiciness, levels = c("Mild", "Medium", "Hot"))
as.numeric(sp)
levels(sp)
levels(sp) = c("Mild", "Spicy", "Extra Spicy")
sp
x = c(1,2,3,5)
factor(x)
levels(factor(x))
as.numeric(x)
as.numeric(levels(x)[x])
x[c(4,2,1,3,4)]
chef = c("A", "B", "C", "D", "E")
spiciness = c("Medium", "Mild", "Hot", "Hot", "Medium")
score = c(5,6,3,5,5)
summary(score)
Chili = data.frame(chef, spiciness,score)
summary(Chili)
Chili$chef
Chili = data.frame(cook=chef, spiciness, rating=score)
summary(Chili)
Chili$chef
Chili$cook
names(Chili)
names(Chili)[3]
names(Chili)[3] = "score1"
summary(Chili)
library(car)
install.packages("car", dependencies=TRUE)
library(car)
?writeLines
?cat
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=80),tidy=TRUE)
setwd("~/Desktop/EugeneTang/Grad School/Berkeley/W203_Statistics/Homework/Lab01/broadband/") # change as necessary
library(dplyr)
library(car)
df_price = read.table("Price.csv", header = TRUE, sep = ",")
df_penetration = read.table("Penetration_Modified.csv", header = TRUE, sep = ",")
df_speed = read.table("Speed_Modified.csv", header = TRUE, sep = ",")
# some dataset cleaning (see "Data Quality Evaluation" for more details on why we did this)
drops_penetration <- c("X") # extra column
df_penetration = df_penetration[ , !(names(df_penetration) %in% drops_penetration)]
colnames(df_speed)[2] <- "Country.Code"
# convert numeric fields to the numeric type
convert_to_numeric = function(col) {
return(as.numeric(sub("[\\$%,]","", col)))
}
NON_ID_DATA_START <- 3 # columns 1 and 2 are the country and country code data
df_price[NON_ID_DATA_START:length(df_price)] = lapply(df_price[NON_ID_DATA_START:length(df_price)], convert_to_numeric)
df_penetration[NON_ID_DATA_START:length(df_penetration)] = lapply(df_penetration[NON_ID_DATA_START:length(df_penetration)], convert_to_numeric)
df_speed[NON_ID_DATA_START:length(df_speed)] = lapply(df_speed[NON_ID_DATA_START:length(df_speed)], convert_to_numeric)
# Join the data
df_partial = full_join(df_penetration, df_price, by = c("Country", "Country.Code"))
df_full = full_join(df_partial, df_speed, by = c("Country", "Country.Code"))
writeLines(paste(length(df_full)))
writeLines(paste(df_full$Country))
cols_with_nas <- colnames(df_full)[colSums(is.na(df_full)) > 0]
summary(df_full[cols_with_nas])
cols_with_nas <- colnames(df_full)[colSums(is.na(df_full)) > 0]
print_nas = function(col) {
writeLines(paste("Number of NAs in", col, ":", sum(is.na(col))))
}
lapply(df_full[cols_with_nas], print_nas)
print_nas = function(colname) {
writeLines(paste("Number of NAs in", colname, ":", sum(is.na(df_full[colname]))))
}
lapply(cols_with_nas, print_nas)
writeLines(paste(length(df_full$Country), "countries"))
writeLines(paste(df_full$Country), collapse="")
writeLines(paste(length(df_full$Country), "countries"))
writeLines(paste(df_full$Country), sep="", collapse="")
writeLines(paste(length(df_full$Country), "countries"))
writeLines(paste(df_full$Country, collapse = "", sep = ""))
writeLines(paste(length(df_full$Country), "countries"))
writeLines(paste(df_full$Country, collapse = ", ", sep = ""))
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#setwd("C:/Users/csekar/broadband") # change as necessary
setwd("~/Desktop/EugeneTang/Grad School/Berkeley/W203_Statistics/Homework/Lab01/broadband/") # change as necessary
library(dplyr)
library(car)
df_price = read.table("Price.csv", header = TRUE, sep = ",")
df_penetration = read.table("Penetration.csv", header = TRUE, sep = ",")
df_speed = read.table("Speed.csv", header = TRUE, sep = ",")
# some dataset cleaning (see "Data Processing" for more details on why we did this)
df_penetration = df_penetration[-c(-1),]
df_speed = df_speed[-c(-1,-2),]
drops_penetration <- c("X") # extra column to remove
df_penetration = df_penetration[ , !(names(df_penetration) %in% drops_penetration)]
colnames(df_speed)[2] <- "Country.Code" # rename country code column
# convert numeric fields to the numeric type
convert_to_numeric = function(col) {
return(as.numeric(sub("[\\$%,]","", col)))
}
NON_ID_DATA_START <- 3 # columns 1 and 2 are the country and country code data
df_price[NON_ID_DATA_START:length(df_price)] = lapply(df_price[NON_ID_DATA_START:length(df_price)], convert_to_numeric)
df_penetration[NON_ID_DATA_START:length(df_penetration)] =
lapply(df_penetration[NON_ID_DATA_START:length(df_penetration)], convert_to_numeric)
df_speed[NON_ID_DATA_START:length(df_speed)] =
lapply(df_speed[NON_ID_DATA_START:length(df_speed)], convert_to_numeric)
# Join the data
df_partial = full_join(df_penetration, df_price, by = c("Country", "Country.Code"))
df_full = full_join(df_partial, df_speed, by = c("Country", "Country.Code"))
library(dplyr)
library(car)
df_price = read.table("Price.csv", header = TRUE, sep = ",")
df_penetration = head(read.table("Penetration.csv", header = TRUE, sep = ",") -1)
df_speed = head(read.table("Speed.csv", header = TRUE, sep = ","), -2)
# some dataset cleaning (see "Data Processing" for more details on why we did this)
drops_penetration <- c("X") # extra column to remove
df_penetration = df_penetration[ , !(names(df_penetration) %in% drops_penetration)]
colnames(df_speed)[2] <- "Country.Code" # rename country code column
# convert numeric fields to the numeric type
convert_to_numeric = function(col) {
return(as.numeric(sub("[\\$%,]","", col)))
}
NON_ID_DATA_START <- 3 # columns 1 and 2 are the country and country code data
df_price[NON_ID_DATA_START:length(df_price)] = lapply(df_price[NON_ID_DATA_START:length(df_price)], convert_to_numeric)
df_penetration[NON_ID_DATA_START:length(df_penetration)] =
lapply(df_penetration[NON_ID_DATA_START:length(df_penetration)], convert_to_numeric)
df_speed[NON_ID_DATA_START:length(df_speed)] =
lapply(df_speed[NON_ID_DATA_START:length(df_speed)], convert_to_numeric)
# Join the data
df_partial = full_join(df_penetration, df_price, by = c("Country", "Country.Code"))
?head
library(dplyr)
library(car)
df_price = read.table("Price.csv", header = TRUE, sep = ",")
df_penetration = head(read.table("Penetration.csv", header = TRUE, sep = ",") -1)
df_speed = head(read.table("Speed.csv", header = TRUE, sep = ","), -2)
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#setwd("C:/Users/csekar/broadband") # change as necessary
setwd("~/Desktop/EugeneTang/Grad School/Berkeley/W203_Statistics/Homework/Lab01/broadband/") # change as necessary
library(dplyr)
library(car)
df_price = read.table("Price.csv", header = TRUE, sep = ",")
df_penetration = head(read.table("Penetration.csv", header = TRUE, sep = ",") -1)
df_speed = head(read.table("Speed.csv", header = TRUE, sep = ","), -2)
getwd()
setwd("~/Desktop/EugeneTang/Grad School/Berkeley/W203_Statistics/Homework/Lab01/broadband/") # change as necessary
getwd()
df_price = read.table("Price.csv", header = TRUE, sep = ",")
df_penetration = head(read.table("Penetration.csv", header = TRUE, sep = ",") -1)
df_speed = head(read.table("Speed.csv", header = TRUE, sep = ","), -2)
In Ops.factor(left, right) : ‘-’ not meaningful for factors
df_price = read.table("Price.csv", header = TRUE, sep = ",")
df_penetration = head(read.table("Penetration.csv", header = TRUE, sep = ","), -1)
df_speed = head(read.table("Speed.csv", header = TRUE, sep = ","), -2)
library(dplyr)
library(car)
df_price = read.table("Price.csv", header = TRUE, sep = ",")
df_penetration = head(read.table("Penetration.csv", header = TRUE, sep = ","), -1)
df_speed = head(read.table("Speed.csv", header = TRUE, sep = ","), -2)
# some dataset cleaning (see "Data Processing" for more details on why we did this)
drops_penetration <- c("X") # extra column to remove
df_penetration = df_penetration[ , !(names(df_penetration) %in% drops_penetration)]
colnames(df_speed)[2] <- "Country.Code" # rename country code column
# convert numeric fields to the numeric type
convert_to_numeric = function(col) {
return(as.numeric(sub("[\\$%,]","", col)))
}
NON_ID_DATA_START <- 3 # columns 1 and 2 are the country and country code data
df_price[NON_ID_DATA_START:length(df_price)] = lapply(df_price[NON_ID_DATA_START:length(df_price)], convert_to_numeric)
df_penetration[NON_ID_DATA_START:length(df_penetration)] =
lapply(df_penetration[NON_ID_DATA_START:length(df_penetration)], convert_to_numeric)
df_speed[NON_ID_DATA_START:length(df_speed)] =
lapply(df_speed[NON_ID_DATA_START:length(df_speed)], convert_to_numeric)
# Join the data
df_partial = full_join(df_penetration, df_price, by = c("Country", "Country.Code"))
df_full = full_join(df_partial, df_speed, by = c("Country", "Country.Code"))
c(1,2,3,4)
x <- c(1,2,3,4)
head(x,-1)
df_penetration$Country
View(df_speed)
library(dplyr)
library(car)
df_price = read.table("Price.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
df_penetration = head(read.table("Penetration.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE), -1)
df_speed = head(read.table("Speed.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE), -2)
# some dataset cleaning (see "Data Processing" for more details on why we did this)
drops_penetration <- c("X") # extra column to remove
df_penetration = df_penetration[ , !(names(df_penetration) %in% drops_penetration)]
colnames(df_speed)[2] <- "Country.Code" # rename country code column
# convert numeric fields to the numeric type
convert_to_numeric = function(col) {
return(as.numeric(sub("[\\$%,]","", col)))
}
NON_ID_DATA_START <- 3 # columns 1 and 2 are the country and country code data
df_price[NON_ID_DATA_START:length(df_price)] = lapply(df_price[NON_ID_DATA_START:length(df_price)], convert_to_numeric)
df_penetration[NON_ID_DATA_START:length(df_penetration)] =
lapply(df_penetration[NON_ID_DATA_START:length(df_penetration)], convert_to_numeric)
df_speed[NON_ID_DATA_START:length(df_speed)] =
lapply(df_speed[NON_ID_DATA_START:length(df_speed)], convert_to_numeric)
# Join the data
df_partial = full_join(df_penetration, df_price, by = c("Country", "Country.Code"))
df_full = full_join(df_partial, df_speed, by = c("Country", "Country.Code"))
corr(df_full$Price.for.med.speeds..combined, df_full$Price.for.high.speeds..combined)
cor(df_full$Price.for.med.speeds..combined, df_full$Price.for.high.speeds..combined)
cor(df_full$Price.for.med.speeds..combined, df_full$Price.for.high.speeds..combined)
?cor
cor(df_full$Price.for.med.speeds..combined, df_full$Price.for.high.speeds..combined, na.rm = T)
cor(df_full$Price.for.med.speeds..combined, df_full$Price.for.high.speeds..combined, na.rm = TRUE)
cor(df_full$Price.for.med.speeds..combined, df_full$Price.for.high.speeds..combined, use="pairwise.complete.obs")
scatterplot.matrix(~ Average.actual.speed..Akamai..kbps. + Average.download.speedtest.net..kbps. + Average.upload.speedtest.net..kbps. + Average.latency.speedtest.net)
scatterplotMatrix(~ Average.actual.speed..Akamai..kbps. + Average.download.speedtest.net..kbps. + Average.upload.speedtest.net..kbps. + Average.latency.speedtest.net)
scatterplotMatrix(~ Average.actual.speed..Akamai..kbps. + Average.download.speedtest.net..kbps. + Average.upload.speedtest.net..kbps. + Average.latency.speedtest.net, data=df_full)
hist(df_full$Average.actual.speed..Akamai..kbps.)
scatterplotMatrix(~ Average.actual.speed..Akamai..kbps. + Average.download.speedtest.net..kbps. + Average.upload.speedtest.net..kbps. + Average.latency.speedtest.net, data=df_full)
cor(df_full$Average.actual.speed..Akamai..kbps., df_full$Average.download.speedtest.net..kbps., use="pairwise.complete.obs")
cor(df_full$Average.actual.speed..Akamai..kbps., df_full$Average.upload.speedtest.net..kbps., use="pairwise.complete.obs")
cor(df_full$Average.actual.speed..Akamai..kbps., df_full$Average.latency.speedtest.net..kbps., use="pairwise.complete.obs")
cor(df_full$Average.actual.speed..Akamai..kbps., df_full$Average.latency.speedtest.net., use="pairwise.complete.obs")
cor(df_full$Average.actual.speed..Akamai..kbps., df_full$Average.latency.speedtest.net, use="pairwise.complete.obs")
cor(df_price["Low speed"], df_price["Medium speed"])
colnames(df_price)[NON_ID_DATA_START:length(df_price)] <- c("Low speed", "Medium speed", "High Speed", "VeryHigh Speed")
summary(df_price)
cor(df_price["Low speed"], df_price["Medium speed"])
cor(df_price["High speed"], df_price["Medium speed"])
cor(df_price["Low Speed"], df_price["Medium Speed"])
colnames(df_price)[NON_ID_DATA_START:length(df_price)] <- c("Low_Speed", "Medium_Speed", "High_Speed", "VeryHigh_Speed")
summary(df_price)
boxplot(df_price[NON_ID_DATA_START:length(df_price)],ylab = "Price in USD" , col = c("palevioletred","sienna","royalblue","red1"))
cor(df_price$Low_Speed, df_price$Medium_Speed)
cor(df_price$Low_Speed, df_price$Medium_Speed, use="pairwise.complete.obs")
cor(df_price$Low_Speed, df_price$Medium_Speed, use="pairwise.complete.obs")
cor(df_price$High_Speed, df_price$Medium_Speed, use="pairwise.complete.obs")
cor(df_price$VeryHigh_Speed, df_price$Medium_Speed, use="pairwise.complete.obs")
colnames(df_speed)[NON_ID_DATA_START:length(df_speed)] <- c("Max Advertised", "Average Advertised", "Average Actual", "Average Download", "SD download", "Average upload", "SD upload", "Average Latency", "SD Latency", "Median Download", "Median upload", "Median Latency", "Top 90% Download", "Top 90% Upload", "Bottom 10% Latency")
summary(df_speed)
hist(df_speed$`Average Actual`, breaks=20, col="red", main = 'Histogram of Average Actual Speed, Akamai', xlab = 'Average Actual Speed, Akamai (kbps)')
boxplot(df_price[NON_ID_DATA_START:length(df_price)],ylab = "Price in USD" , col = c("palevioletred","sienna","royalblue","red1"), main="Boxplots of prices for different levels of Internet")
boxplot(df_price[NON_ID_DATA_START:length(df_price)],ylab = "Price in USD" , col = c("palevioletred","sienna","royalblue","red1"), main="Boxplots of prices for different levels of Internet")
boxplot(df_price[NON_ID_DATA_START:length(df_price)],ylab = "Price in USD" , col = c("palevioletred","sienna","royalblue","red1"), main="Boxplots of prices for different levels of Internet")
boxplot(df_price[NON_ID_DATA_START:length(df_price)],ylab = "Price in USD" , col = c("palevioletred","sienna","royalblue","red1"), main="Boxplots of prices for different levels of Internet")
max(df_speed$`Average Download`)
df_speed$`Average Download`
df_speed$Country[which.max(df_speed$`Average Download`)]
df_speed$Country[which.max(df_speed$`Average Upload`)]
df_speed$Country[which.max(df_speed$`Average upload`)]
df_speed$Country[which.max(df_speed$`Median Download`)]
df_speed$Country[which.max(df_speed$`Median upload`)]
df_speed$Country[which.max(df_speed$`Median Latency`)]
COUNTRIES_NO_OPEN_ACCESS = c("US", "MX", "SK")
df_full_wo_open_access = df_full[ , df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS]
df_full_with_open_access = df_full[ , !(df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS)]
COUNTRIES_NO_OPEN_ACCESS = c("US", "MX", "SK")
df_full_wo_open_access = df_full[df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS, ]
df_full_with_open_access = df_full[!(df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS), ]
df_full$Median.download..speedtest.net..kbps.
COUNTRIES_NO_OPEN_ACCESS = c("US", "MX", "SK")
df_full_wo_open_access = df_full[df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS, ]
df_full_with_open_access = df_full[!(df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS), ]
summary(df_full_with_open_access[c("Price.for.med.speeds..combined", "Penetration.per.100.OECD..2008", "Median.download..speedtest.net..kbps.")])
COUNTRIES_NO_OPEN_ACCESS = c("US", "MX", "SK")
df_full_wo_open_access = df_full[df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS, ]
df_full_with_open_access = df_full[!(df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS), ]
summary(df_full_with_open_access[c("Price.for.med.speeds..combined", "Penetration.per.100.OECD..2008", "Median.download..speedtest.net..kbps.")])
summary(df_full_wo_open_access[c("Price.for.med.speeds..combined", "Penetration.per.100.OECD..2008", "Median.download..speedtest.net..kbps.")])
boxplot(df_full_with_open_access["Price.for.med.speeds..combined"],ylab = "Price in USD" , col = c("palevioletred","sienna","royalblue","red1"), main="Boxplots of prices for different levels of Internet")
install.packages("scatterplot3d")
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#setwd("C:/W203/broadband") # change as necessary
setwd("~/Desktop/EugeneTang/Grad School/Berkeley/W203_Statistics/Homework/Lab01/broadband/") # change as necessary
library(dplyr)
library(car)
library(scatterplot3d)
df_price = read.table("Price.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
df_penetration = head(read.table("Penetration.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE), -1) # last row is empty
df_speed = head(read.table("Speed.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE), -2) # last two rows is empty
# some dataset cleaning (see "Data Processing" for more details on why we did this)
drops_penetration <- c("X") # extra column to remove
df_penetration = df_penetration[ , !(names(df_penetration) %in% drops_penetration)]
colnames(df_speed)[2] <- "Country.Code" # rename country code column
# convert numeric fields to the numeric type
convert_to_numeric = function(col) {
return(as.numeric(sub("[\\$%,]","", col)))
}
NON_ID_DATA_START <- 3 # columns 1 and 2 are the country and country code data
df_price[NON_ID_DATA_START:length(df_price)] = lapply(df_price[NON_ID_DATA_START:length(df_price)], convert_to_numeric)
df_penetration[NON_ID_DATA_START:length(df_penetration)] =
lapply(df_penetration[NON_ID_DATA_START:length(df_penetration)], convert_to_numeric)
df_speed[NON_ID_DATA_START:length(df_speed)] =
lapply(df_speed[NON_ID_DATA_START:length(df_speed)], convert_to_numeric)
# Join the data
df_partial = full_join(df_penetration, df_price, by = c("Country", "Country.Code"))
df_full = full_join(df_partial, df_speed, by = c("Country", "Country.Code"))
COUNTRIES_NO_OPEN_ACCESS = c("US", "MX", "SK")
df_full_wo_open_access = df_full[df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS, ]
df_full_with_open_access = df_full[!(df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS), ]
summary(df_full_with_open_access[c("Price.for.med.speeds..combined", "Penetration.per.100.OECD..2008", "Median.download..speedtest.net..kbps.")])
summary(df_full_wo_open_access[c("Price.for.med.speeds..combined", "Penetration.per.100.OECD..2008", "Median.download..speedtest.net..kbps.")])
COUNTRIES_NO_OPEN_ACCESS = c("US", "MX", "SK")
df_full_wo_open_access = df_full[df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS, ]
df_full_with_open_access = df_full[!(df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS), ]
writeLines("Countries with open access")
summary(df_full_with_open_access[c("Price.for.med.speeds..combined", "Penetration.per.100.OECD..2008", "Median.download..speedtest.net..kbps.")])
writeLines("Countries without open access")
summary(df_full_wo_open_access[c("Price.for.med.speeds..combined", "Penetration.per.100.OECD..2008", "Median.download..speedtest.net..kbps.")])
COUNTRIES_NO_OPEN_ACCESS = c("US", "MX", "SK")
df_full_wo_open_access = df_full[df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS, ]
df_full_with_open_access = df_full[!(df_full$Country.Code %in% COUNTRIES_NO_OPEN_ACCESS), ]
writeLines("Summary data for countries with open access")
summary(df_full_with_open_access[c("Price.for.med.speeds..combined", "Penetration.per.100.OECD..2008", "Median.download..speedtest.net..kbps.")])
writeLines("Summary data for countries without open access")
summary(df_full_wo_open_access[c("Price.for.med.speeds..combined", "Penetration.per.100.OECD..2008", "Median.download..speedtest.net..kbps.")])
colnames(df_speed)[NON_ID_DATA_START:length(df_speed)] <- c("Max Advertised", "Average Advertised", "Average Actual", "Average Download", "SD download", "Average upload", "SD upload", "Average Latency", "SD Latency", "Median Download", "Median upload", "Median Latency", "Top 90% Download", "Top 90% Upload", "Bottom 10% Latency")
summary(df_speed)
cor(df_price$`Average Actual`, df_price$`Median Download`, use="pairwise.complete.obs")
cor(df_price$`Average Actual`, df_price$`Median Download`, use="pairwise.complete.obs")
cor(df_speed$`Average Actual`, df_speed$`Median Download`, use="pairwise.complete.obs")
cor(df_speed$`Average Actual`, df_speed$`Median upload`, use="pairwise.complete.obs")
cor(df_speed$`Average Actual`, df_speed$`Median Latency`, use="pairwise.complete.obs")
cor(df_speed$`2008`, df_speed$`2007`, use="pairwise.complete.obs")
cor(df_penetration$`2008`, df_penetration$`2007`, use="pairwise.complete.obs")
colnames(df_penetration)[NON_ID_DATA_START:length(df_penetration)] <- c("Penetration 2008", "Penetration 2007", "Household Penetration" ,"2G and 3G Penetration", "Penetration GC", "3G Penetration", "Growth in 3G" , "WiFi hotspots" , "WiFi per 100000", "Percent Urban" )
summary(df_penetration)
cor(df_penetration$`2008`, df_penetration$`2007`, use="pairwise.complete.obs")
cor(df_penetration$`2008`, df_penetration$`2007`, use="pairwise.complete.obs")
cor(df_penetration$`Penetration 2008`, df_penetration$`Penetration 2007`, use="pairwise.complete.obs")
cor(df_penetration$`Penetration 2008`, df_penetration$`Penetration GC`, use="pairwise.complete.obs")
cor(df_penetration$`Penetration 2007`, df_penetration$`Penetration GC`, use="pairwise.complete.obs")
scatterplotMatrix(~Price.for.med.speeds..combined + Penetration.per.100.OECD..2008 + Median.download..speedtest.net..kbps., data=df_full)
corr(df_full$Average.download.speedtest.net..kbps., df_full$Median.download..speedtest.net..kbps., data=df_full)
cor(df_full$Average.download.speedtest.net..kbps., df_full$Median.download..speedtest.net..kbps., data=df_full, use="pairwise.complete.obs")
cor(df_full$Average.download.speedtest.net..kbps., df_full$Median.download..speedtest.net..kbps., data=df_full, use="pairwise.complete.obs")
scatterplot(~Average.latency.speedtest.net + Median.latency..speedtest.net, data=df_full)
plot(~Average.latency.speedtest.net + Median.latency..speedtest.net, data=df_full)
